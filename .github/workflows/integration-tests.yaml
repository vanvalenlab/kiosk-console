name: integration-tests

on:
  pull_request:
    branches: master
  push: {}

jobs:
  integration-tests:

    runs-on: ubuntu-latest

    if: |
      github.event_name == 'pull_request' ||
      (
        github.event_name == 'push' &&
        contains(github.event.head_commit.message, '[build-integration-tests]')
      )

    strategy:
      matrix:
        CLOUD_PROVIDER:
          - gke
          # - aws

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - uses: google-github-actions/setup-gcloud@main
      with:
        version: '290.0.1'
        project_id: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        export_default_credentials: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and Run Integration Tests
      env:
        GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
        CLOUDSDK_BUCKET: ${{ secrets.CLOUDSDK_BUCKET }}
        CLOUDSDK_COMPUTE_REGION: us-west1
        REGION_ZONES_WITH_GPUS: us-west1-a,us-west1-b
        IMAGE: ${{ github.repository }}:${{ github.sha }}
        GCP_SA_KEY_PATH: /tmp/keys/gcloud_key.json
      run: |
        docker buildx build --load --tag ${{ env.IMAGE }} .
        docker run -d -it \
          --volume $(readlink -f ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}):${{ env.GCP_SA_KEY_PATH }}:ro \
          --env CLOUD_PROVIDER=${{ matrix.CLOUD_PROVIDER }} \
          --env GCP_SERVICE_ACCOUNT=${{ env.GCP_SERVICE_ACCOUNT }} \
          --env CLOUDSDK_CORE_PROJECT=${{ env.CLOUDSDK_CORE_PROJECT }} \
          --env CLOUDSDK_BUCKET=${{ env.CLOUDSDK_BUCKET }} \
          --env CLOUDSDK_COMPUTE_REGION=${{ env.CLOUDSDK_COMPUTE_REGION }} \
          --env REGION_ZONES_WITH_GPUS=${{ env.REGION_ZONES_WITH_GPUS }} \
          --env GOOGLE_APPLICATION_CREDENTIALS=${{ env.GCP_SA_KEY_PATH }} \
          --entrypoint=/bin/bash \
          --name kiosk \
          ${{ env.IMAGE }}
        docker exec kiosk make test/integration/${{ matrix.CLOUD_PROVIDER }}/deploy
        docker kill kiosk && docker rm kiosk

  elk-integration-tests:

    runs-on: ubuntu-latest

    if: |
      github.event_name == 'pull_request' ||
      (
        github.event_name == 'push' &&
        contains(github.event.head_commit.message, '[build-integration-tests]') &&
        contains(github.event.head_commit.message, '[test-elk]')
      )

    strategy:
      matrix:
        CLOUD_PROVIDER:
          - gke
          # - aws

    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - uses: google-github-actions/setup-gcloud@main
      with:
        version: '290.0.1'
        project_id: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        export_default_credentials: true

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and Run ELK Integration Tests
      env:
        GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
        CLOUDSDK_CORE_PROJECT: ${{ secrets.CLOUDSDK_CORE_PROJECT }}
        CLOUDSDK_BUCKET: ${{ secrets.CLOUDSDK_BUCKET }}
        CLOUDSDK_COMPUTE_REGION: us-west1
        REGION_ZONES_WITH_GPUS: us-west1-a,us-west1-b
        IMAGE: ${{ github.repository }}:${{ github.sha }}
        GCP_SA_KEY_PATH: /tmp/keys/gcloud_key.json
      run: |
        docker buildx build --load --tag ${{ env.IMAGE }} .
        docker run -d -it \
          --volume $(readlink -f ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}):${{ env.GCP_SA_KEY_PATH }}:ro \
          --env CLOUD_PROVIDER=${{ matrix.CLOUD_PROVIDER }} \
          --env GCP_SERVICE_ACCOUNT=${{ env.GCP_SERVICE_ACCOUNT }} \
          --env CLOUDSDK_CORE_PROJECT=${{ env.CLOUDSDK_CORE_PROJECT }} \
          --env CLOUDSDK_BUCKET=${{ env.CLOUDSDK_BUCKET }} \
          --env CLOUDSDK_COMPUTE_REGION=${{ env.CLOUDSDK_COMPUTE_REGION }} \
          --env REGION_ZONES_WITH_GPUS=${{ env.REGION_ZONES_WITH_GPUS }} \
          --env GOOGLE_APPLICATION_CREDENTIALS=${{ env.GCP_SA_KEY_PATH }} \
          --entrypoint=/bin/bash \
          --name kiosk \
          ${{ env.IMAGE }}
        docker exec kiosk make test/integration/${{ matrix.CLOUD_PROVIDER }}/deploy/elk
        docker kill kiosk && docker rm kiosk
