releases:

################################################################################
## Frontend ####################################################################
################################################################################

#
# References:
#   - https://github.com/vanvalenlab/kiosk-console/blob/master/conf/charts/frontend/values.yaml
#
- name: frontend
  namespace: deepcell
  labels:
    chart: frontend
    component: deepcell
    namespace: deepcell
    vendor: vanvalenlab
    default: true
  chart: '{{ env "CHARTS_PATH" | default "/conf/charts" }}/frontend'
  version: 0.4.0
  wait: true
  timeout: 300
  atomic: true
  cleanupOnFail: true
  values:
    - replicas: 1

      image:
        repository: vanvalenlab/kiosk-frontend
        tag: tracking-update

      resources:
        requests:
          cpu: 150m
          memory: 256Mi
        # limits:
        #   cpu: 100m
        #   memory: 512Mi

      service:
        type: "ClusterIP"
        httpIngressEnabled: true
        httpsIngressEnabled: true

      ingress:
        enabled: true
        path: /
        annotations:
          kubernetes.io/ingress.class: "nginx"
          nginx.ingress.kubernetes.io/proxy-body-size: "1g"
          {{ if ne (env "CERTIFICATE_MANAGER_ENABLED" | default "") "" }}
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/auth-tls-secret: "deepcell/tls-cert"
          # Use "letsencrypt-prod" for production.
          cert-manager.io/cluster-issuer: {{ env "CERTIFICATE_MANAGER_CLUSTER_ISSUER" | default "letsecrypt-staging" }}
          {{ end }}

        # Use $DNS_DOMAIN_NAME in production
        {{ if ne (env "CERTIFICATE_MANAGER_ENABLED" | default "") "" }}
        hosts:
          - {{ env "DNS_DOMAIN_NAME" | default "deepcell.org" }}
          - www.{{ env "DNS_DOMAIN_NAME" | default "deepcell.org" }}
        tls:
          - hosts:
            - {{ env "DNS_DOMAIN_NAME" | default "deepcell.org" }}
            - www.{{ env "DNS_DOMAIN_NAME" | default "deepcell.org" }}
            secretName: tls-cert
        {{ end }}

      hpa:
        enabled: true
        minReplicas: 1
        maxReplicas: {{ mul (int (env "GPU_NODE_MAX_SIZE" | default 1)) 10 }}
        metrics:
        - type: Resource
          resource:
            name: cpu
            targetAverageUtilization: 80

      env:
        PORT: 8080
        REDIS_HOST: redis
        REDIS_PORT: 26379
        REDIS_SENTINEL: "true"
        MODEL_PREFIX: "models/"
        AWS_REGION: '{{ env "AWS_REGION" | default "us-east-1" }}'
        UPLOAD_PREFIX: "uploads/"
        JOB_TYPES: "mesmer,segmentation,caliban,polaris"
        REACT_APP_LABEL_BACKEND: "example.com"
        REACT_APP_LABEL_FRONTEND: "example.com"
        REACT_APP_GA_TRACKING_ID: "UA-XXXXXXXXX-X"

      secrets:
        AWS_ACCESS_KEY_ID: '{{ env "AWS_ACCESS_KEY_ID" | default "NA" }}'
        AWS_SECRET_ACCESS_KEY: '{{ env "AWS_SECRET_ACCESS_KEY" | default "NA" }}'
        GCLOUD_PROJECT_ID: '{{ env "CLOUDSDK_CORE_PROJECT" | default "NA" }}'
{{ if eq (env "CLOUD_PROVIDER" | default "aws") "aws" }}
        STORAGE_BUCKET: 's3://{{ env "AWS_S3_BUCKET" | default "NA" }}'
{{ else }}
        STORAGE_BUCKET: 'gs://{{ env "CLOUDSDK_BUCKET" | default "NA" }}'
{{ end }}
